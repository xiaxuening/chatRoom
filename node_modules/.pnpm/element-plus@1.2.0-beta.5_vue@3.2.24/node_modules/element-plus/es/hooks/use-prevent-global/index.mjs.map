{"version":3,"file":"index.mjs","sources":["../../../../../packages/hooks/use-prevent-global/index.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport type { Ref } from 'vue'\n\nexport const usePreventGlobal = <E extends keyof DocumentEventMap>(\n  indicator: Ref<boolean>,\n  evt: E,\n  cb: (e: DocumentEventMap[E]) => boolean\n) => {\n  const prevent = (e: DocumentEventMap[E]) => {\n    if (cb(e)) e.stopImmediatePropagation()\n  }\n  let stop: (() => void) | undefined = undefined\n  watch(\n    () => indicator.value,\n    (val) => {\n      if (val) {\n        stop = useEventListener(document, evt, prevent, true)\n      } else {\n        stop?.()\n      }\n    },\n    { immediate: true }\n  )\n}\n"],"names":[],"mappings":";;;MAIa,mBAAmB,CAC9B,WACA,KACA,OACG;AACH,QAAM,UAAU,CAAC,MAA2B;AAC1C,QAAI,GAAG;AAAI,QAAE;AAAA;AAEf,MAAI,OAAiC;AACrC,QACE,MAAM,UAAU,OAChB,CAAC,QAAQ;AACP,QAAI,KAAK;AACP,aAAO,iBAAiB,UAAU,KAAK,SAAS;AAAA,WAC3C;AACL;AAAA;AAAA,KAGJ,EAAE,WAAW;AAAA;;;;"}