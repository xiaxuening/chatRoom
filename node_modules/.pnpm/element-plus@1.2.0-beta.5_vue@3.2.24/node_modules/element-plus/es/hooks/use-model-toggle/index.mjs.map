{"version":3,"file":"index.mjs","sources":["../../../../../packages/hooks/use-model-toggle/index.ts"],"sourcesContent":["import { computed, getCurrentInstance, watch, onMounted } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { isBool } from '@element-plus/utils/util'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport isServer from '@element-plus/utils/isServer'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport type { RouteLocationNormalizedLoaded } from 'vue-router'\n\nimport type { Ref, ComponentPublicInstance, ExtractPropTypes } from 'vue'\n\nexport const useModelToggleProps = buildProps({\n  modelValue: {\n    type: definePropType<boolean | null>(Boolean),\n    default: null,\n  },\n  'onUpdate:modelValue': Function,\n})\nexport type UseModelToggleProps = ExtractPropTypes<typeof useModelToggleProps>\n\nexport const useModelToggleEmits = [UPDATE_MODEL_EVENT]\n\nexport type ModelToggleParams = {\n  indicator: Ref<boolean>\n  shouldHideWhenRouteChanges?: Ref<boolean>\n  shouldProceed?: () => boolean\n  onShow?: () => void\n  onHide?: () => void\n}\n\nexport const useModelToggle = ({\n  indicator,\n  shouldHideWhenRouteChanges,\n  shouldProceed,\n  onShow,\n  onHide,\n}: ModelToggleParams) => {\n  const instance = getCurrentInstance()!\n  const props = instance.props as UseModelToggleProps & { disabled: boolean }\n  const { emit } = instance\n\n  const hasUpdateHandler = computed(() =>\n    isFunction(props['onUpdate:modelValue'])\n  )\n  // when it matches the default value we say this is absent\n  // though this could be mistakenly passed from the user but we need to rule out that\n  // condition\n  const isModelBindingAbsent = computed(() => props.modelValue === null)\n\n  const doShow = () => {\n    if (indicator.value === true) {\n      return\n    }\n\n    indicator.value = true\n    if (isFunction(onShow)) {\n      onShow()\n    }\n  }\n\n  const doHide = () => {\n    if (indicator.value === false) {\n      return\n    }\n\n    indicator.value = false\n\n    if (isFunction(onHide)) {\n      onHide()\n    }\n  }\n\n  const show = () => {\n    if (\n      props.disabled === true ||\n      (isFunction(shouldProceed) && !shouldProceed())\n    )\n      return\n\n    const shouldEmit = hasUpdateHandler.value && !isServer\n\n    if (shouldEmit) {\n      emit(UPDATE_MODEL_EVENT, true)\n    }\n\n    if (isModelBindingAbsent.value || !shouldEmit) {\n      doShow()\n    }\n  }\n\n  const hide = () => {\n    if (props.disabled === true || isServer) return\n\n    const shouldEmit = hasUpdateHandler.value && !isServer\n\n    if (shouldEmit) {\n      emit(UPDATE_MODEL_EVENT, false)\n    }\n\n    if (isModelBindingAbsent.value || !shouldEmit) {\n      doHide()\n    }\n  }\n\n  const onChange = (val: boolean) => {\n    if (!isBool(val)) return\n    if (props.disabled && val) {\n      if (hasUpdateHandler.value) {\n        emit(UPDATE_MODEL_EVENT, false)\n      }\n    } else if (indicator.value !== val) {\n      if (val) {\n        doShow()\n      } else {\n        doHide()\n      }\n    }\n  }\n\n  const toggle = () => {\n    if (indicator.value) {\n      hide()\n    } else {\n      show()\n    }\n  }\n\n  watch(() => props.modelValue, onChange as any)\n\n  if (\n    shouldHideWhenRouteChanges &&\n    instance.appContext.config.globalProperties.$route !== undefined\n  ) {\n    watch(\n      () => ({\n        ...(\n          instance.proxy as ComponentPublicInstance<{\n            $route: RouteLocationNormalizedLoaded\n          }>\n        ).$route,\n      }),\n      () => {\n        if (shouldHideWhenRouteChanges.value && indicator.value) {\n          hide()\n        }\n      }\n    )\n  }\n\n  onMounted(() => {\n    onChange(props.modelValue as boolean)\n  })\n\n  return {\n    hide,\n    show,\n    toggle,\n  }\n}\n"],"names":[],"mappings":";;;;;;;MAUa,sBAAsB,WAAW;AAAA,EAC5C,YAAY;AAAA,IACV,MAAM,eAA+B;AAAA,IACrC,SAAS;AAAA;AAAA,EAEX,uBAAuB;AAAA;MAIZ,sBAAsB,CAAC;MAUvB,iBAAiB,CAAC;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACuB;AACvB,QAAM,WAAW;AACjB,QAAM,QAAQ,SAAS;AACvB,QAAM,EAAE,SAAS;AAEjB,QAAM,mBAAmB,SAAS,MAChC,WAAW,MAAM;AAKnB,QAAM,uBAAuB,SAAS,MAAM,MAAM,eAAe;AAEjE,QAAM,SAAS,MAAM;AACnB,QAAI,UAAU,UAAU,MAAM;AAC5B;AAAA;AAGF,cAAU,QAAQ;AAClB,QAAI,WAAW,SAAS;AACtB;AAAA;AAAA;AAIJ,QAAM,SAAS,MAAM;AACnB,QAAI,UAAU,UAAU,OAAO;AAC7B;AAAA;AAGF,cAAU,QAAQ;AAElB,QAAI,WAAW,SAAS;AACtB;AAAA;AAAA;AAIJ,QAAM,OAAO,MAAM;AACjB,QACE,MAAM,aAAa,QAClB,WAAW,kBAAkB,CAAC;AAE/B;AAEF,UAAM,aAAa,iBAAiB,SAAS,CAAC;AAE9C,QAAI,YAAY;AACd,WAAK,oBAAoB;AAAA;AAG3B,QAAI,qBAAqB,SAAS,CAAC,YAAY;AAC7C;AAAA;AAAA;AAIJ,QAAM,OAAO,MAAM;AACjB,QAAI,MAAM,aAAa,QAAQ;AAAU;AAEzC,UAAM,aAAa,iBAAiB,SAAS,CAAC;AAE9C,QAAI,YAAY;AACd,WAAK,oBAAoB;AAAA;AAG3B,QAAI,qBAAqB,SAAS,CAAC,YAAY;AAC7C;AAAA;AAAA;AAIJ,QAAM,WAAW,CAAC,QAAiB;AACjC,QAAI,CAAC,OAAO;AAAM;AAClB,QAAI,MAAM,YAAY,KAAK;AACzB,UAAI,iBAAiB,OAAO;AAC1B,aAAK,oBAAoB;AAAA;AAAA,eAElB,UAAU,UAAU,KAAK;AAClC,UAAI,KAAK;AACP;AAAA,aACK;AACL;AAAA;AAAA;AAAA;AAKN,QAAM,SAAS,MAAM;AACnB,QAAI,UAAU,OAAO;AACnB;AAAA,WACK;AACL;AAAA;AAAA;AAIJ,QAAM,MAAM,MAAM,YAAY;AAE9B,MACE,8BACA,SAAS,WAAW,OAAO,iBAAiB,WAAW,QACvD;AACA,UACE;AAAO,SAEH,SAAS,MAGT;AAAA,QAEJ,MAAM;AACJ,UAAI,2BAA2B,SAAS,UAAU,OAAO;AACvD;AAAA;AAAA;AAAA;AAMR,YAAU,MAAM;AACd,aAAS,MAAM;AAAA;AAGjB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA;AAAA;;;;"}